<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Numbering System &#8211; The SIGMA</title>
	<atom:link href="/index.php/tag/numbering-system/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>&#60;For Those Who Code/&#62;</description>
	<lastBuildDate>
	Sat, 02 Mar 2019 16:57:34 +0000	</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.1.1</generator>
	<item>
		<title>Numbering System</title>
		<link>/index.php/2018/04/21/943/</link>
				<comments>/index.php/2018/04/21/943/#respond</comments>
				<pubDate>Fri, 20 Apr 2018 20:32:23 +0000</pubDate>
		<dc:creator><![CDATA[Shehan Rangana]]></dc:creator>
				<category><![CDATA[Computer Systems]]></category>
		<category><![CDATA[Computer_Systems]]></category>
		<category><![CDATA[Numbering System]]></category>

		<guid isPermaLink="false">/?p=943</guid>
				<description><![CDATA[<p><span class="rt-reading-time" style="display: block;"><span class="rt-label">Reading Time: </span> <span class="rt-time">6</span> <span class="rt-label rt-postfix">minutes</span></span> ආයුබෝවන්&#8230;Computer System යටතේ මම කලින් ලිපියෙන් අපේ මේ වැඩසටහන ගැන පොඩි හැඳින්වීමක් වගේම මූලික දේවල් පොඩ්ඩක් කතා කලා. ඒක බලන්න බැරි උනානම් ඔයාට මෙතනින් ගිහින් ඒ ලිපිය බලන්න පුලුවන්. හොඳයි එහෙනම් අපි දැන් අද පාඩමට යමු. අද අපි කතා කරන්න යන්නේ Numbering System ගැන. Numbering System ගැන කතා කරද්දි අපි<a class="moretag" href="/index.php/2018/04/21/943/"> Read more&#8230;</a></p>
<p>The post <a rel="nofollow" href="/index.php/2018/04/21/943/">Numbering System</a> appeared first on <a rel="nofollow" href="/">The SIGMA</a>.</p>
]]></description>
								<content:encoded><![CDATA[<span class="rt-reading-time" style="display: block;"><span class="rt-label">Reading Time: </span> <span class="rt-time">6</span> <span class="rt-label rt-postfix">minutes</span></span><p>ආයුබෝවන්&#8230;Computer System යටතේ මම කලින් ලිපියෙන් අපේ මේ වැඩසටහන ගැන පොඩි හැඳින්වීමක් වගේම මූලික දේවල් පොඩ්ඩක් කතා කලා. ඒක බලන්න බැරි උනානම් ඔයාට <a href="/index.php/2018/04/07/introduction-to-computer-systems/">මෙතනින්</a> ගිහින් ඒ ලිපිය බලන්න පුලුවන්. හොඳයි එහෙනම් අපි දැන් අද පාඩමට යමු. අද අපි කතා කරන්න යන්නේ Numbering System ගැන.</p>
<p>Numbering System ගැන කතා කරද්දි අපි ප්‍රධානවම Numbering System 4ක් ගැන කතා කරනවා.</p>
<p>1) Binary System &gt; Alphabet = {0,1}<br />
2) Decimal System &gt; Alphabet = {0,1,2,3,4,5,6,7,8,9}<br />
3) Octal System &gt; Alphabet = {0,1,2,3,4,5,6,7}<br />
4) Hexadecimal System &gt; Alphabet = {0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F}</p>
<p>දැන් අපි බලමු දශමය(Decimal) සංඛ්‍යාවක් ද්වීමය(Binary) සංඛ්‍යාවකට හරවන්නේ කොහොමද කියලා.</p>
<p><img class="alignnone wp-image-944 size-medium" src="/wp-content/uploads/2018/04/D_to_B-300x226.jpg" alt="" width="300" height="226" srcset="/wp-content/uploads/2018/04/D_to_B-300x226.jpg 300w, /wp-content/uploads/2018/04/D_to_B.jpg 400w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<p>මේ උදාහරණෙන් අපි 25 කියන දශමය සංඛ්‍යාව ද්වීමය සංඛ්‍යාවක් බවට පත්කරලා තියෙන්නේ. ඇත්තටම මේකෙදි නම් කරන්න දෙයක් ඇත්තෙම නැති තරම්. මොකක්ද අපි කරලා තියෙන්නේ, 25 කියන සංඛ්‍යාව 2න් බෙදාගෙන ගිහින් තියෙනවා 0 වෙනකන්ම. එහෙම බෙදාගෙන යද්දි ඉතුරු වෙන අගය ඉස්සරහින් ලියනවා. අන්තිමටම කරන්නේ යට ඉඳන් උඩට ඒ ඉතිරි අගයන් ටික ලියාගෙන යන එක. හරිම සරලයි. දෙකේ පාදයට විතරක් නෙවෙයි, දශමය සංඛ්‍යාවක් ඕනම පාදයකට හරවන්න ඕනනම් කරන්න තියෙන්නේ ඒ අවශ්‍ය පාදයෙන් දශමය සංඛ්‍යාව 0 වෙනකන්ම බෙදගෙන යන එක. එතකොට කලින් උදාහරණෙදි වගේම ඉතුරු වෙන අගයන්ගෙන් අපිට අවශය පිලිතුර ලැබෙනවා.</p>
<p>දැන් අපි බලමු ද්වීමය(Binary) සංඛ්‍යාවක් දශමය(Decimal) සංඛ්‍යාවක් බවට පත්කරන්නෙ කොහොමද කියලා. අපි ඒක උදාහරණයකින්ම බලමුකෝ&#8230;</p>
<p><img class="alignnone size-medium wp-image-945" src="/wp-content/uploads/2018/04/B_to_D-300x214.jpg" alt="" width="300" height="214" srcset="/wp-content/uploads/2018/04/B_to_D-300x214.jpg 300w, /wp-content/uploads/2018/04/B_to_D.jpg 664w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<p>හොඳයි එහෙනම් මං හිතනවා කාටත් මේ කරපු දේ තේරෙන්න ඇති කියලා. අපැහැදිලි තැනක් තියෙනවනම් කරුණාකරලා පහලින් Comment කරන්න. දැන් අපි යමු 16 පාදයට.</p>
<h3><strong>Hexadecimal Notation</strong></h3>
<p>දැන් අපි බලමු ද්වීමය(Binary) සංඛ්‍යාවක් ෂඩ්දශමය(Hexadecimal) සංඛ්‍යාවකට හරවන්නේ කොහොමද කියලා.</p>
<p><img class="wp-image-971 alignleft" src="/wp-content/uploads/2018/04/B_to_Hex.jpg" alt="" width="363" height="385" />මෙතනදි කරන්න තියෙන්නෙ අපේ ද්වීමය සංඛ්‍යාව දකුණු පැත්තෙ ඉඳන් ඉලක්කම් 4න් 4ට වෙන් කරගෙන එන එක. ඊට පස්සෙ කරන්න තියෙන්නෙ උදාහරණෙ විදියට ඒ ඒ කොටස් වලට අදාළ දශමය සංඛ්‍යාව ලියන එක. මෙතනදි අපි 10 ඉඳන් 15 දක්වා ඉලක්කම් වෙනුවට පාවිච්චි කරන්නෙ A වල ඉඳන් F දක්වා ඉංග්‍රීසි අකුරු. ඒකට හේතුව මොකක්ද කියලත් ඔයාලට දැන් තේරෙනවා ඇති. 16 පාදයෙන් තියෙන සංඛ්‍යාවක් ද්වීමය සංඛ්‍යාවකට හරවන්නෙ කොහොමද කියල ඉතින් අමුතුවෙන් කියන්න දේකුත් නෑ. උඩ තියෙන උදාහරණ දෙක අග ඉඳන් මුලට බැලුවනම් මොකක්ද වෙන්නෙ කියලා තේරෙනවනෙ. ඒක නිසා මම ඒ ගැන කියන්න යන්නෙ නෑ. ෂඩ්දශමය සංඛ්‍යාවක් දශමය සංඛ්‍යාවකට පරිවර්තනය කරද්දි කරන්නෙත් කලින් දෙකේ පාදෙ දි කරපු වැඩේම තමයි.වෙනස තියෙන්නෙ පාදයට 2 වෙනුවට 16 පාවිච්චි කරන එක.</p>
<p>අෂ්ටමය සංඛ්‍යා පද්ධතිය ගැන මම මෙතනදි කතා කරන්න යන්නෙ නැහැ. ඇත්තටම එතන වෙන්නෙත් මේ විදියටම තමයි. වෙනස වෙන්නෙ 16 පාදයෙ සංඛ්‍යාවක් ලියද්දි bit 4ක් යොදා ගනිපු එක 8 පාදෙ දි bit 3කින් ලියන එක. අර දකුණු පැත්තෙ ඉඳන් bit 4න් 4ට කඩපු එක මෙතනදි කඩන්නෙ bit 3න් 3ට.<br />
හරි. තව පොඩි දෙයක් ගැන කියන්න තියෙනවා Numbering System ගැන කතා කරද්දි. එහෙනම් අපි දැන් බලමු ද්වීමය සංඛ්‍යා එක්ක කොහොමද මූලික ගණිත කර්ම ටික කරන්නෙ කියලා.</p>
<h5><strong>Binary Addition</strong></h5>
<p><img class="alignnone size-medium wp-image-954" src="/wp-content/uploads/2018/04/binaryAddition-240x300.jpg" alt="" width="240" height="300" srcset="/wp-content/uploads/2018/04/binaryAddition-240x300.jpg 240w, /wp-content/uploads/2018/04/binaryAddition.jpg 320w" sizes="(max-width: 240px) 100vw, 240px" /></p>
<h5><strong>Binary Subtraction</strong></h5>
<p><img class="alignnone size-medium wp-image-955" src="/wp-content/uploads/2018/04/binarySubs-240x300.jpg" alt="" width="240" height="300" srcset="/wp-content/uploads/2018/04/binarySubs-240x300.jpg 240w, /wp-content/uploads/2018/04/binarySubs.jpg 320w" sizes="(max-width: 240px) 100vw, 240px" /></p>
<h5><strong>Binary Multiplication</strong></h5>
<p><img class="alignnone size-medium wp-image-956" src="/wp-content/uploads/2018/04/binaryMulti-300x300.jpg" alt="" width="300" height="300" srcset="/wp-content/uploads/2018/04/binaryMulti-300x300.jpg 300w, /wp-content/uploads/2018/04/binaryMulti-150x150.jpg 150w, /wp-content/uploads/2018/04/binaryMulti.jpg 350w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<h5><strong>Binary Division</strong></h5>
<p><img class="alignnone size-medium wp-image-958" src="/wp-content/uploads/2018/04/binaryDevide-276x300.jpg" alt="" width="276" height="300" srcset="/wp-content/uploads/2018/04/binaryDevide-276x300.jpg 276w, /wp-content/uploads/2018/04/binaryDevide.jpg 350w" sizes="(max-width: 276px) 100vw, 276px" /></p>
<p>හරි. මේ වෙනකන් අපි කතා කරේ බොහොම සරල දේවල් ටිකක් නේ&#8230;දැන් අපි පොඩ්ඩක් වෙනස් තැනකට යමු&#8230;</p>
<h3><strong>Representing Numbers</strong></h3>
<p>Numbers Represent කරන්න වෙනස් විධියේ ක්‍රම 3ක් තියෙනවා.</p>
<p>1. Unsigned representation : for non-negative integers<br />
2. Signed representation : for negative integers<br />
3. Floating-point representation : for fractions</p>
<h5><strong>1) Unsigned Binary Numbers (8 &#8211; bit)</strong></h5>
<p>මොනවද මේ Unsigned Binary Numbers කියන්නේ ? ඒක මම මෙහෙම කියන්නම්කො..<br />
&gt;  යොදා ගන්නෙ 0යි 1යි. ඒකනම් ඉතින් කොහොමත් දන්නවනෙ.<br />
&gt;  මේ ක්‍රමෙන් store කරන්න පුලුවන් Positive Numbers විතරයි.<br />
&gt;  Represent කරන්න පුලුවන් කුඩාම binary number එක 0 (= 00000000).<br />
&gt;  Represent කරන්න පුලුවන් විශාලම binary number එක 255 (= 11111111).<br />
&gt;  Represent කරන්න පුලුවන් range එක 0 &#8211; 255.<br />
දැන් බලමු Signed Binary Numbers කියන්නෙ මොනවද කියලා&#8230;</p>
<h5><strong>2) Signed Binary Numbers (8 &#8211; bit)</strong></h5>
<p>&gt;  යොදා ගන්නෙ 0යි 1යි.<br />
&gt;  මෙතනදි වම් පත්තෙ කොනේම තියෙන bit එක හඳුන්වන්නෙ sign bit එක කියලා. ( 0 for positive , 1 for negative ).<br />
&gt;  Represent කරන්න පුලුවන් කුඩාම positive binary number එක 0 (= 00000000).<br />
&gt;  Represent කරන්න පුලුවන් විශාලම positive binary number එක 127(= 01111111).<br />
&gt;  Represent කරන්න පුලුවන් positive numbers range එක 0 &#8211; 127.<br />
හරි. හැබැයි මේ ක්‍රමේදි පොඩි ප්‍රශ්න 2ක් තියෙනවා. එකක් තමයි ක්‍රම 2කට 0 represent කරන්න පුලුවන් වීම.(+0 = 00000000 , -0 = 10000000). අනිත් එක අපි උදාහරණෙකින්ම බලමු.</p>
<p><img class="alignnone size-medium wp-image-959" src="/wp-content/uploads/2018/04/problem1-300x214.jpg" alt="" width="300" height="214" srcset="/wp-content/uploads/2018/04/problem1-300x214.jpg 300w, /wp-content/uploads/2018/04/problem1.jpg 350w" sizes="(max-width: 300px) 100vw, 300px" />ඒ කියන්නෙ 5න් 3ක් අඩු කරාම උත්තරේ විදියට -8ක් ඇවිත් තියෙනවා. එහෙනම් ඔයාලට තේරෙනවා මෙතන ප්‍රශ්නයක් තියෙනව කියලා.මේ ගැටලු මගහැරගන්නත් ක්‍රමයක් තියෙනවා. දැන් අපි බලමු ඒ මොකක්ද කියලා.</p>
<h5><strong>Two&#8217;s Complement</strong></h5>
<p>අපිට ප්‍රශ්නෙ ආවෙ negative numbers represent කරන්න ගියාමනේ. මේ ක්‍රමෙන් අපි කරන්නෙ ,<br />
&gt;  අපිට ඕන negative number එකේ positive number එක signed ක්‍රමයට ලියනවා.<br />
&gt;  දකුණෙ ඉඳන් වමට bit pattern එක copy කරගෙන යනවා පලවෙනි &#8220;1&#8221; හමුවෙනකන්.<br />
&gt;  එතනින් පස්සෙ එන සෑම bit එකක්ම තියෙන අගයෙන් අනිත් අගයට හරවනවා.(-128 = 10000000 හැර).<br />
මෙහෙම කිව්වට එච්චර තේරෙන එකක් නෑනේ. අපි ඒක උදාහරණෙකුත් එක්ක බලමු.</p>
<p>හිතන්නකො අපිට ඕන -3 binary වලින් ලියන්න. දැන් එහෙනම් ඉස්සෙල්ලම කරන්නෙ +3 signed binary වලින් ලියාගන්නවා.</p>
<p><img class="alignnone size-medium wp-image-960" src="/wp-content/uploads/2018/04/binary3-300x75.jpg" alt="" width="300" height="75" srcset="/wp-content/uploads/2018/04/binary3-300x75.jpg 300w, /wp-content/uploads/2018/04/binary3.jpg 400w" sizes="(max-width: 300px) 100vw, 300px" /><br />
දැන් පලවෙනි &#8220;1&#8221; හමුවෙනකන් දකුණෙ ඉඳන් වමට bit pattern එක copy කරනවා.</p>
<p><img class="alignnone size-medium wp-image-961" src="/wp-content/uploads/2018/04/binary3with1-300x75.jpg" alt="" width="300" height="75" srcset="/wp-content/uploads/2018/04/binary3with1-300x75.jpg 300w, /wp-content/uploads/2018/04/binary3with1.jpg 400w" sizes="(max-width: 300px) 100vw, 300px" /><br />
දැන් කරන්නේ එතනින් පස්සෙ එන ඔක්කොම ඉලක්කම් ටික මාරු කරනවා. ඒ කියන්නෙ 0 තියෙන තැනට 1ත්, 1 තියෙන තැනට 0ත් ලියනවා.</p>
<p><img class="alignnone size-medium wp-image-962" src="/wp-content/uploads/2018/04/binary-3-300x75.jpg" alt="" width="300" height="75" srcset="/wp-content/uploads/2018/04/binary-3-300x75.jpg 300w, /wp-content/uploads/2018/04/binary-3.jpg 400w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<p>මේ අන්තිමට ඇවිත් තියෙන binary අගය සමාන වෙන්නෙ -3ට. හරි, ඔන්න එහෙනම් අපි Two&#8217;s Complement ගැනත් කතා කරා. එහෙනම් Two&#8217;s Complement වලදි represent කරන්න පුලුවන් කුඩාම අගය වෙන්නෙ -128. විශාලම අගය වෙන්නෙ +127. ඒ වගේම මේ ක්‍රමේදි අපිට 0 ඒවා 2ක් එන්නෙත් නෑ.<br />
හරි, දැන් අපිට තියෙන්නෙ Floating-point representation ගැන කතා කරන්න.</p>
<h5><strong>3) Floating-point representation (Fractions)</strong></h5>
<h5>♦  Fractions in Binary</h5>
<p>අපි මේකත් උදාහරණයකින්ම බලමු.</p>
<p><img class="alignnone size-medium wp-image-963" src="/wp-content/uploads/2018/04/fra_in_binary-300x300.jpg" alt="" width="300" height="300" srcset="/wp-content/uploads/2018/04/fra_in_binary-300x300.jpg 300w, /wp-content/uploads/2018/04/fra_in_binary-150x150.jpg 150w, /wp-content/uploads/2018/04/fra_in_binary.jpg 350w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<p>හරි. උදාහරණෙ කාටත් තේරෙන්න ඇති කියලා හිතනවා. දැන් බලමු Floating Point Numbers වල Format එක මොන වගේද කියලා.</p>
<p><strong>Floating Point Format in 1 Byte</strong></p>
<p><img class="alignnone size-medium wp-image-964" src="/wp-content/uploads/2018/04/fff_in_1byte-300x138.jpg" alt="" width="300" height="138" srcset="/wp-content/uploads/2018/04/fff_in_1byte-300x138.jpg 300w, /wp-content/uploads/2018/04/fff_in_1byte.jpg 480w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<p>දැන් අපි මේ format එකට number එකක් store කරල බලමු.</p>
<p>&nbsp;</p>
<p><img class="size-full wp-image-967 alignnone" src="/wp-content/uploads/2018/04/floating_point_number_1.jpg" alt="" width="400" height="650" srcset="/wp-content/uploads/2018/04/floating_point_number_1.jpg 400w, /wp-content/uploads/2018/04/floating_point_number_1-185x300.jpg 185w" sizes="(max-width: 400px) 100vw, 400px" /></p>
<p>උදාහරණෙ බැලුවට මේක නම් එච්චර තේරෙන එකක් නෑ. ඒක නිසා මේ උත්තර ආවෙ කොහොමද කියලත් පොඩ්ඩක් බලමු.<br />
sign bit එකට 0 දාපු එක ප්‍රශ්නයක් නෑනෙ. ධන සංඛ්‍යාවක් නිසා 0 දැම්මා. ඊලඟට mantissa bits ඇවිත් තියෙන්නෙ දශම තිතෙන් පස්සෙ තියෙන ඉලක්කම් ටිකෙන්. මෙතනදි හොඳට මතක තියාගන්න අපි දශම තිත තියෙන තැන ගන්නෙ <strong>විද්‍යාත්මක අංකන</strong> ක්‍රමයෙන්. හැමෝම විද්‍යාත්මක අංකන ක්‍රමය ගැන අහලා ඇතිනෙ. හරි මං උදාහරණෙකුත් පෙන්නන්නම්.</p>
<p><img class="alignnone size-full wp-image-968" src="/wp-content/uploads/2018/04/scientific_notation.jpg" alt="" width="420" height="110" srcset="/wp-content/uploads/2018/04/scientific_notation.jpg 420w, /wp-content/uploads/2018/04/scientific_notation-300x79.jpg 300w" sizes="(max-width: 420px) 100vw, 420px" /></p>
<p>හරි. step 3 වල තියෙන exponent bits වලට 011 ඇවිත් තියෙනවා. ඒක ඇවිත් තියෙන්නෙ k වල අගයයි 2 ඉලක්කමට ඇවිත් තියෙන බලයයි එකතු වෙලා. මේ උදාහරණෙදි නම් ද්වීමය සංඛ්‍යාව අපිට අවශ්‍ය විදියටම තියෙනවා.ඒක නිසා අමුතුවෙන් විද්‍යාත්මක අංකන ක්‍රමයට හරවන්න දෙයක් නෑ. ඒක නිසා තමයි 2ට 0 බලයක් ඇවිත් තියෙන්නෙ. හරි දැන් නම් තේරෙනවා ඇති. අපි තව උදාහරණයක් බලමු.</p>
<p><img class="alignnone size-full wp-image-969" src="/wp-content/uploads/2018/04/floating_point_number_2.jpg" alt="" width="400" height="550" srcset="/wp-content/uploads/2018/04/floating_point_number_2.jpg 400w, /wp-content/uploads/2018/04/floating_point_number_2-218x300.jpg 218w" sizes="(max-width: 400px) 100vw, 400px" /><br />
හරි. දැන් අපි බලමු මේ විදියට(Floating Point Binary) තියෙන number එකක් Decimal වලට හරවන්නෙ කොහොමද කියලා.</p>
<p><img class="alignnone size-full wp-image-970" src="/wp-content/uploads/2018/04/floating_point_number_BACK.jpg" alt="" width="425" height="680" srcset="/wp-content/uploads/2018/04/floating_point_number_BACK.jpg 425w, /wp-content/uploads/2018/04/floating_point_number_BACK-188x300.jpg 188w" sizes="(max-width: 425px) 100vw, 425px" /><br />
කලින් කරපු දේම අග ඉඳන් මුලට යනවා වගේ වැඩක් තියෙන්නේ.<br />
හරි. ඔන්න එහෙනම් අපි Numbering System ගැනත් කතා කරා. තේරෙන්නෙ නැති තැනක් තියෙනවනම් පහලින් comment කරන්න. ඒ වගේම අපේ මේ වැඩසටහන ගැන ඔයාලගෙ අදහසත් පහලින් comment කරන්න කියලා මතක් කරනවා. එහෙනම් තවත් ලිපියකින් හමුවෙනතුරු සමුගන්නම්. ස්තූතියි.</p>
<p>The post <a rel="nofollow" href="/index.php/2018/04/21/943/">Numbering System</a> appeared first on <a rel="nofollow" href="/">The SIGMA</a>.</p>
]]></content:encoded>
							<wfw:commentRss>/index.php/2018/04/21/943/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
	</channel>
</rss>
